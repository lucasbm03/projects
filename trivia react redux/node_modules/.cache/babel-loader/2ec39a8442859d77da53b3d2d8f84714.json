{"ast":null,"code":"var _jsxFileName = \"/home/Lucas/Projetos-Trybe/sd-025-a-project-trivia-react-redux/src/Component/Header.js\";\nimport md5 from 'crypto-js/md5';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  render() {\n    const {\n      eMail,\n      name,\n      score\n    } = this.props;\n    const emailUser = md5(gravatarEMail.gravatarEMail).toString();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"header-profile-picture\",\n        src: `https://www.gravatar.com/avatar/${emailUser}`,\n        alt: \"gravatarIMG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"header-player-name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"header-score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"names":["md5","React","Header","Component","render","eMail","name","score","props","emailUser","gravatarEMail","toString","mapStateToProps","state","email","player","gravatarEmail","propTypes","PropTypes","string","isRequired","connect"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trivia-react-redux/src/Component/Header.js"],"sourcesContent":["import md5 from 'crypto-js/md5';\nimport React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    const { eMail, name, score } = this.props;\n    const emailUser = md5(gravatarEMail.gravatarEMail).toString();\n    return (\n      <div>\n        <img\n          data-testid=\"header-profile-picture\"\n          src={ `https://www.gravatar.com/avatar/${emailUser}` }\n          alt=\"gravatarIMG\"\n        />\n        <h3\n          data-testid=\"header-player-name\"\n        >\n          { name }\n\n        </h3\n        >\n        <h3\n          data-testid=\"header-score\"\n        >\n          { score }\n        </h3>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;EACnCC,MAAM,GAAG;IACP,MAAM;MAAEC,KAAF;MAASC,IAAT;MAAeC;IAAf,IAAyB,KAAKC,KAApC;IACA,MAAMC,SAAS,GAAGT,GAAG,CAACU,aAAa,CAACA,aAAf,CAAH,CAAiCC,QAAjC,EAAlB;IACA,oBACE;MAAA,wBACE;QACE,eAAY,wBADd;QAEE,GAAG,EAAI,mCAAkCF,SAAU,EAFrD;QAGE,GAAG,EAAC;MAHN;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QACE,eAAY,oBADd;QAAA,UAGIH;MAHJ;QAAA;QAAA;QAAA;MAAA,QANF,eAaE;QACE,eAAY,cADd;QAAA,UAGIC;MAHJ;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAsBD;;AA1BkC;;AA6BrC,MAAMK,eAAe,GAAIC,KAAD,KAAY;EAClCC,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC,aADc;EAElCV,IAAI,EAAEO,KAAK,CAACE,MAAN,CAAaT,IAFe;EAGlCC,KAAK,EAAEM,KAAK,CAACE,MAAN,CAAaR;AAHc,CAAZ,CAAxB;;AAMAL,MAAM,CAACe,SAAP,GAAmB;EACjBH,KAAK,EAAEI,SAAS,CAACC,MAAV,CAAiBC,UADP;EAEjBd,IAAI,EAAEY,SAAS,CAACC,MAAV,CAAiBC,UAFN;EAGjBb,KAAK,EAAEW,SAAS,CAACC,MAAV,CAAiBC;AAHP,CAAnB;AAMA,eAAeC,OAAO,CAACT,eAAD,CAAP,CAAyBV,MAAzB,CAAf"},"metadata":{},"sourceType":"module"}