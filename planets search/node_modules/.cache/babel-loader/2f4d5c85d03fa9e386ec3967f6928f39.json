{"ast":null,"code":"var _jsxFileName = \"/home/Lucas/Projetos-Trybe/sd-025-a-project-starwars-planets-search/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport requestAPI from '../services/requestAPI';\nimport StarWarsContext from './StarwarsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState(data);\n  const [searchValue, setSearchValue] = useState('');\n  const [filterData, setFilterData] = useState([]);\n\n  const handleChangeName = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const resultFilter = DATA => {\n    const {\n      column,\n      comparison,\n      value\n    } = DATA;\n    setFilterData([...filterData, DATA]);\n    let filtered = [];\n\n    switch (comparison) {\n      case 'maior que':\n        filtered = filter.filter(ele => +ele[column] > +value);\n        break;\n\n      case 'menor que':\n        filtered = filter.filter(ele => +ele[column] < +value);\n        break;\n\n      case 'igual a':\n        filtered = filter.filter(ele => +ele[column] === +value);\n        break;\n\n      default:\n        filtered = filter;\n        break;\n    }\n\n    setFilter(filtered);\n  };\n\n  const reset = () => {\n    setFilter(data);\n  };\n\n  const filterForReset = dataF => {\n    let results = data;\n    dataF.forEach(ele => {\n      const {\n        column,\n        comparison,\n        value\n      } = ele;\n\n      switch (comparison) {\n        case 'maior que':\n          results = results.filter(e => +e[column] > +value);\n          break;\n\n        case 'menor que':\n          results = results.filter(e => +e[column] < +value);\n          break;\n\n        case 'igual a':\n          results = results.filter(e => +e[column] === +value);\n          break;\n\n        default:\n          break;\n      }\n    });\n    setFilter(results);\n  };\n\n  const val = {\n    data,\n    requestAPI,\n    filterData,\n    setFilterData,\n    handleChangeName,\n    filter,\n    setFilter,\n    resultFilter,\n    reset,\n    filterForReset\n  };\n  useEffect(() => {\n    requestAPI().then(result => setData(result));\n  }, []);\n  useEffect(() => {\n    const filterResult = data.filter(e => e.name.toUpperCase().includes(searchValue.toUpperCase()));\n    setFilter(filterResult);\n  }, [searchValue, data]);\n  return /*#__PURE__*/_jsxDEV(StarWarsContext.Provider, {\n    value: val,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Provider, \"ZtnT8F7a7G7imt6EbjTxcWmLzzg=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.shape().isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","requestAPI","StarWarsContext","Provider","children","data","setData","filter","setFilter","searchValue","setSearchValue","filterData","setFilterData","handleChangeName","e","target","value","resultFilter","DATA","column","comparison","filtered","ele","reset","filterForReset","dataF","results","forEach","val","then","result","filterResult","name","toUpperCase","includes","propTypes","shape","isRequired"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-starwars-planets-search/src/context/Provider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport requestAPI from '../services/requestAPI';\nimport StarWarsContext from './StarwarsContext';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState(data);\n  const [searchValue, setSearchValue] = useState('');\n  const [filterData, setFilterData] = useState([]);\n\n  const handleChangeName = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  const resultFilter = (DATA) => {\n    const { column, comparison, value } = DATA;\n    setFilterData([...filterData, DATA]);\n    let filtered = [];\n    switch (comparison) {\n    case 'maior que':\n      filtered = filter.filter((ele) => +ele[column] > +value);\n      break;\n    case 'menor que':\n      filtered = filter.filter((ele) => +ele[column] < +value);\n      break;\n    case 'igual a':\n      filtered = filter.filter((ele) => +ele[column] === +value);\n      break;\n    default:\n      filtered = filter;\n      break;\n    }\n    setFilter(filtered);\n  };\n\n  const reset = () => {\n    setFilter(data);\n  };\n\n  const filterForReset = (dataF) => {\n    let results = data;\n    dataF.forEach((ele) => {\n      const { column, comparison, value } = ele;\n      switch (comparison) {\n      case 'maior que':\n        results = results.filter((e) => +e[column] > +value);\n        break;\n      case 'menor que':\n        results = results.filter((e) => +e[column] < +value);\n        break;\n      case 'igual a':\n        results = results.filter((e) => +e[column] === +value);\n        break;\n\n      default:\n        break;\n      }\n    });\n    setFilter(results);\n  };\n\n  const val = {\n    data,\n    requestAPI,\n    filterData,\n    setFilterData,\n    handleChangeName,\n    filter,\n    setFilter,\n    resultFilter,\n    reset,\n    filterForReset,\n  };\n\n  useEffect(() => {\n    requestAPI().then((result) => setData(result));\n  }, []);\n\n  useEffect(() => {\n    const filterResult = data.filter(\n      (e) => e.name.toUpperCase().includes(searchValue.toUpperCase()),\n    );\n    setFilter(filterResult);\n  }, [searchValue, data]);\n\n  return <StarWarsContext.Provider value={ val }>{ children }</StarWarsContext.Provider>;\n}\n\nProvider.propTypes = {\n  children: PropTypes.shape().isRequired,\n};\n\nexport default Provider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}