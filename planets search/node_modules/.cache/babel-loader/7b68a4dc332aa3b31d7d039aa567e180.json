{"ast":null,"code":"var _jsxFileName = \"/home/Lucas/Projetos-Trybe/sd-025-a-project-starwars-planets-search/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport requestAPI from '../services/requestAPI';\nimport StarWarsContext from './StarwarsContext';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState(data);\n  const [searchValue, setSearchValue] = useState('');\n  const [filterData, setFilterData] = useState([]);\n\n  const handleChangeName = e => {\n    setSearchValue(e.target.value);\n  };\n\n  useEffect(() => {\n    requestAPI().then(result => setData(result));\n  }, []);\n  useEffect(() => {\n    const searchFilter = data.filter(ele => ele.name.toUpperCase().includes(searchValue.toUpperCase()));\n    setFilter(searchFilter);\n  }, [searchValue, data]);\n  useEffect(() => {\n    const {\n      column,\n      compare,\n      numbers\n    } = selectedOpt;\n    let filtered = [];\n\n    switch (compare) {\n      case 'maior que':\n        filtered = data.filter(e => +e[column] > +numbers);\n        break;\n\n      case 'menor que':\n        filtered = data.filter(e => +e[column] < +numbers);\n        break;\n\n      case 'igual a':\n        filtered = data.filter(e => +e[column] === +numbers);\n        break;\n\n      default:\n        filtered = data;\n    }\n\n    setFilter(filtered);\n  }, [selectedOpt, data]);\n  const val = {\n    data,\n    handleChange,\n    searchValue,\n    filter,\n    selectedOpt,\n    setSelectedOpt\n  };\n  return /*#__PURE__*/_jsxDEV(StarWarsContext.Provider, {\n    value: val,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Provider, \"xslLXZmCA7gAcA5Xxu2XfnVJg60=\");\n\n_c = Provider;\nProvider.propTypes = {}.isRequired;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useEffect","useState","requestAPI","StarWarsContext","PropTypes","Provider","children","data","setData","filter","setFilter","searchValue","setSearchValue","filterData","setFilterData","handleChangeName","e","target","value","then","result","searchFilter","ele","name","toUpperCase","includes","column","compare","numbers","selectedOpt","filtered","val","handleChange","setSelectedOpt","propTypes","isRequired"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-starwars-planets-search/src/context/Provider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport requestAPI from '../services/requestAPI';\nimport StarWarsContext from './StarwarsContext';\nimport PropTypes from 'prop-types';\n\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState(data);\n  const [searchValue, setSearchValue] = useState('');\n  const [filterData, setFilterData] = useState([]);\n\n  const handleChangeName = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  useEffect(() => {\n    requestAPI().then((result) => setData(result));\n  }, []);\n\n  useEffect(() => {\n    const searchFilter = data.filter((ele) => (\n      ele.name.toUpperCase().includes(searchValue.toUpperCase())\n    ));\n    setFilter(searchFilter);\n  }, [searchValue, data]);\n\n  useEffect(() => {\n    const { column, compare, numbers } = selectedOpt;\n\n    let filtered = [];\n    switch (compare) {\n    case 'maior que':\n      filtered = data.filter((e) => +e[column] > +numbers);\n      break;\n    case 'menor que':\n      filtered = data.filter((e) => +e[column] < +numbers);\n      break;\n    case 'igual a':\n      filtered = data.filter((e) => +e[column] === +numbers);\n      break;\n    default:\n      filtered = data;\n    }\n    setFilter(filtered);\n  }, [selectedOpt, data]);\n\n  const val = {\n    data,\n    handleChange,\n    searchValue,\n    filter,\n    selectedOpt,\n    setSelectedOpt,\n  };\n\n  return <StarWarsContext.Provider value={ val }>{ children }</StarWarsContext.Provider>;\n}\n\nProvider.propTypes = {}.isRequired;\n\nexport default Provider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACM,IAAD,CAApC;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAMc,gBAAgB,GAAIC,CAAD,IAAO;IAC9BJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;EACD,CAFD;;EAIAlB,SAAS,CAAC,MAAM;IACdE,UAAU,GAAGiB,IAAb,CAAmBC,MAAD,IAAYZ,OAAO,CAACY,MAAD,CAArC;EACD,CAFQ,EAEN,EAFM,CAAT;EAIApB,SAAS,CAAC,MAAM;IACd,MAAMqB,YAAY,GAAGd,IAAI,CAACE,MAAL,CAAaa,GAAD,IAC/BA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCd,WAAW,CAACa,WAAZ,EAAhC,CADmB,CAArB;IAGAd,SAAS,CAACW,YAAD,CAAT;EACD,CALQ,EAKN,CAACV,WAAD,EAAcJ,IAAd,CALM,CAAT;EAOAP,SAAS,CAAC,MAAM;IACd,MAAM;MAAE0B,MAAF;MAAUC,OAAV;MAAmBC;IAAnB,IAA+BC,WAArC;IAEA,IAAIC,QAAQ,GAAG,EAAf;;IACA,QAAQH,OAAR;MACA,KAAK,WAAL;QACEG,QAAQ,GAAGvB,IAAI,CAACE,MAAL,CAAaO,CAAD,IAAO,CAACA,CAAC,CAACU,MAAD,CAAF,GAAa,CAACE,OAAjC,CAAX;QACA;;MACF,KAAK,WAAL;QACEE,QAAQ,GAAGvB,IAAI,CAACE,MAAL,CAAaO,CAAD,IAAO,CAACA,CAAC,CAACU,MAAD,CAAF,GAAa,CAACE,OAAjC,CAAX;QACA;;MACF,KAAK,SAAL;QACEE,QAAQ,GAAGvB,IAAI,CAACE,MAAL,CAAaO,CAAD,IAAO,CAACA,CAAC,CAACU,MAAD,CAAF,KAAe,CAACE,OAAnC,CAAX;QACA;;MACF;QACEE,QAAQ,GAAGvB,IAAX;IAXF;;IAaAG,SAAS,CAACoB,QAAD,CAAT;EACD,CAlBQ,EAkBN,CAACD,WAAD,EAActB,IAAd,CAlBM,CAAT;EAoBA,MAAMwB,GAAG,GAAG;IACVxB,IADU;IAEVyB,YAFU;IAGVrB,WAHU;IAIVF,MAJU;IAKVoB,WALU;IAMVI;EANU,CAAZ;EASA,oBAAO,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAGF,GAAlC;IAAA,UAA0CzB;EAA1C;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAnDQD,Q;;KAAAA,Q;AAqDTA,QAAQ,CAAC6B,SAAT,GAAqB,GAAGC,UAAxB;AAEA,eAAe9B,QAAf"},"metadata":{},"sourceType":"module"}