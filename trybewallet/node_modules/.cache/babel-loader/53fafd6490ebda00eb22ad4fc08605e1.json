{"ast":null,"code":"var _jsxFileName = \"/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coins, inputWalletForm, sumTotal } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: 0,\n      value: '0',\n      description: '',\n      moeda: 'USD',\n      paymentMethod: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {}\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.requestApi = async () => {\n      const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const data = await response.json();\n      delete data.USDT;\n      return data;\n    };\n\n    this.handleClick = async () => {\n      const {\n        dispatch\n      } = this.props;\n      const exchangeRates = await this.requestApi();\n      const item = { ...this.state,\n        exchangeRates\n      };\n      dispatch(quotationAndInfo(item));\n      this.setState(prevState => ({\n        id: prevState.id + 1,\n        value: '',\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n        exchangeRates\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(coins());\n  }\n\n  render() {\n    const {\n      currency\n    } = this.props;\n    const {\n      value,\n      description,\n      moeda,\n      paymentMethod,\n      tag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"valueInput\",\n        children: [\"Valor da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          \"data-testid\": \"value-input\",\n          id: \"valueInput\",\n          name: \"value\",\n          value: value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descInput\",\n        children: [\"Descri\\xE7\\xE3o da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          \"data-testid\": \"description-input\",\n          id: \"descInput\",\n          name: \"description\",\n          value: description,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: [\"Moeda\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"currency-input\",\n          value: moeda,\n          name: \"moeda\",\n          onChange: this.handleChange,\n          id: \"currency\",\n          children: currency.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: e,\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payment\",\n        children: [\"M\\xE9todo de pagamento\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"method-input\",\n          id: \"payment\",\n          name: \"payment\",\n          value: paymentMethod,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"credito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"debito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag\",\n        children: [\"Tag\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"tag-input\",\n          id: \"tag\",\n          name: \"tag\",\n          value: tag,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alimentacao\",\n            children: \"Alimenta\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lazer\",\n            children: \"Lazer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"trabalho\",\n            children: \"Trabalho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"transporte\",\n            children: \"Transporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saude\",\n            children: \"Sa\\xFAde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          text: \"Adicionar despesa\",\n          type: \"button\",\n          onClick: this.handleClick,\n          children: \"Adicionar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currency: state.wallet.currencies\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currency: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["PropTypes","React","Component","connect","coins","inputWalletForm","sumTotal","WalletForm","state","id","value","description","moeda","paymentMethod","tag","exchangeRates","handleChange","target","name","setState","requestApi","response","fetch","data","json","USDT","handleClick","dispatch","props","item","quotationAndInfo","prevState","currency","method","componentDidMount","render","map","e","mapStateToProps","wallet","currencies","propTypes","func","isRequired","arrayOf","string"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coins, inputWalletForm, sumTotal } from '../redux/actions';\n\nclass WalletForm extends Component {\n  state = {\n    id: 0,\n    value: '0',\n    description: '',\n    moeda: 'USD',\n    paymentMethod: 'Dinheiro',\n    tag: 'Alimentação',\n    exchangeRates: {},\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(coins());\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  requestApi = async () => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n\n    const data = await response.json();\n\n    delete data.USDT;\n\n    return data;\n  };\n\n  handleClick = async () => {\n    const { dispatch } = this.props;\n    const exchangeRates = await this.requestApi();\n\n    const item = { ...this.state, exchangeRates };\n\n    dispatch(quotationAndInfo(item));\n\n    this.setState((prevState) => ({\n      id: prevState.id + 1,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates,\n    }));\n  };\n\n  render() {\n    const { currency } = this.props;\n    const { value, description, moeda, paymentMethod, tag } = this.state;\n    return (\n      <fieldset>\n        <label\n          htmlFor=\"valueInput\"\n        >\n          Valor da despesa\n          <input\n            type=\"number\"\n            data-testid=\"value-input\"\n            id=\"valueInput\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"descInput\"\n        >\n          Descrição da despesa\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            id=\"descInput\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"currency\"\n        >\n          Moeda\n          <select\n            data-testid=\"currency-input\"\n            value={ moeda }\n            name=\"moeda\"\n            onChange={ this.handleChange }\n            id=\"currency\"\n          >\n            {currency.map((e) => <option key={ e } value={ e }>{e}</option>)}\n          </select>\n        </label>\n        <label\n          htmlFor=\"payment\"\n        >\n          Método de pagamento\n          <select\n            data-testid=\"method-input\"\n            id=\"payment\"\n            name=\"payment\"\n            value={ paymentMethod }\n            onChange={ this.handleChange }\n          >\n            <option value=\"dinheiro\">Dinheiro</option>\n            <option value=\"credito\">Cartão de crédito</option>\n            <option value=\"debito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label\n          htmlFor=\"tag\"\n        >\n          Tag\n          <select\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            name=\"tag\"\n            value={ tag }\n            onChange={ this.handleChange }\n          >\n            <option value=\"alimentacao\">Alimentação</option>\n            <option value=\"lazer\">Lazer</option>\n            <option value=\"trabalho\">Trabalho</option>\n            <option value=\"transporte\">Transporte</option>\n            <option value=\"saude\">Saúde</option>\n          </select>\n          <button\n            text=\"Adicionar despesa\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n        </label>\n      </fieldset>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currency: state.wallet.currencies,\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currency: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,kBAAjD;;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCM,KADiC,GACzB;MACNC,EAAE,EAAE,CADE;MAENC,KAAK,EAAE,GAFD;MAGNC,WAAW,EAAE,EAHP;MAINC,KAAK,EAAE,KAJD;MAKNC,aAAa,EAAE,UALT;MAMNC,GAAG,EAAE,aANC;MAONC,aAAa,EAAE;IAPT,CADyB;;IAAA,KAgBjCC,YAhBiC,GAgBlB,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;MAC7B,MAAM;QAAEC,IAAF;QAAQR;MAAR,IAAkBO,MAAxB;MACA,KAAKE,QAAL,CAAc;QAAE,CAACD,IAAD,GAAQR;MAAV,CAAd;IACD,CAnBgC;;IAAA,KAqBjCU,UArBiC,GAqBpB,YAAY;MACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;MAEA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MAEA,OAAOD,IAAI,CAACE,IAAZ;MAEA,OAAOF,IAAP;IACD,CA7BgC;;IAAA,KA+BjCG,WA/BiC,GA+BnB,YAAY;MACxB,MAAM;QAAEC;MAAF,IAAe,KAAKC,KAA1B;MACA,MAAMb,aAAa,GAAG,MAAM,KAAKK,UAAL,EAA5B;MAEA,MAAMS,IAAI,GAAG,EAAE,GAAG,KAAKrB,KAAV;QAAiBO;MAAjB,CAAb;MAEAY,QAAQ,CAACG,gBAAgB,CAACD,IAAD,CAAjB,CAAR;MAEA,KAAKV,QAAL,CAAeY,SAAD,KAAgB;QAC5BtB,EAAE,EAAEsB,SAAS,CAACtB,EAAV,GAAe,CADS;QAE5BC,KAAK,EAAE,EAFqB;QAG5BC,WAAW,EAAE,EAHe;QAI5BqB,QAAQ,EAAE,KAJkB;QAK5BC,MAAM,EAAE,UALoB;QAM5BnB,GAAG,EAAE,aANuB;QAO5BC;MAP4B,CAAhB,CAAd;IASD,CAhDgC;EAAA;;EAWjCmB,iBAAiB,GAAG;IAClB,MAAM;MAAEP;IAAF,IAAe,KAAKC,KAA1B;IACAD,QAAQ,CAACvB,KAAK,EAAN,CAAR;EACD;;EAoCD+B,MAAM,GAAG;IACP,MAAM;MAAEH;IAAF,IAAe,KAAKJ,KAA1B;IACA,MAAM;MAAElB,KAAF;MAASC,WAAT;MAAsBC,KAAtB;MAA6BC,aAA7B;MAA4CC;IAA5C,IAAoD,KAAKN,KAA/D;IACA,oBACE;MAAA,wBACE;QACE,OAAO,EAAC,YADV;QAAA,4CAIE;UACE,IAAI,EAAC,QADP;UAEE,eAAY,aAFd;UAGE,EAAE,EAAC,YAHL;UAIE,IAAI,EAAC,OAJP;UAKE,KAAK,EAAGE,KALV;UAME,QAAQ,EAAG,KAAKM;QANlB;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QACE,OAAO,EAAC,WADV;QAAA,sDAIE;UACE,IAAI,EAAC,MADP;UAEE,eAAY,mBAFd;UAGE,EAAE,EAAC,WAHL;UAIE,IAAI,EAAC,aAJP;UAKE,KAAK,EAAGL,WALV;UAME,QAAQ,EAAG,KAAKK;QANlB;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF,eA2BE;QACE,OAAO,EAAC,UADV;QAAA,iCAIE;UACE,eAAY,gBADd;UAEE,KAAK,EAAGJ,KAFV;UAGE,IAAI,EAAC,OAHP;UAIE,QAAQ,EAAG,KAAKI,YAJlB;UAKE,EAAE,EAAC,UALL;UAAA,UAOGgB,QAAQ,CAACI,GAAT,CAAcC,CAAD,iBAAO;YAAkB,KAAK,EAAGA,CAA1B;YAAA,UAA+BA;UAA/B,GAAcA,CAAd;YAAA;YAAA;YAAA;UAAA,QAApB;QAPH;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BF,eAyCE;QACE,OAAO,EAAC,SADV;QAAA,kDAIE;UACE,eAAY,cADd;UAEE,EAAE,EAAC,SAFL;UAGE,IAAI,EAAC,SAHP;UAIE,KAAK,EAAGxB,aAJV;UAKE,QAAQ,EAAG,KAAKG,YALlB;UAAA,wBAOE;YAAQ,KAAK,EAAC,UAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAQ,KAAK,EAAC,SAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAQ,KAAK,EAAC,QAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzCF,eAyDE;QACE,OAAO,EAAC,KADV;QAAA,+BAIE;UACE,eAAY,WADd;UAEE,EAAE,EAAC,KAFL;UAGE,IAAI,EAAC,KAHP;UAIE,KAAK,EAAGF,GAJV;UAKE,QAAQ,EAAG,KAAKE,YALlB;UAAA,wBAOE;YAAQ,KAAK,EAAC,aAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAQ,KAAK,EAAC,OAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAQ,KAAK,EAAC,UAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF,eAUE;YAAQ,KAAK,EAAC,YAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVF,eAWE;YAAQ,KAAK,EAAC,OAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAXF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAiBE;UACE,IAAI,EAAC,mBADP;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAG,KAAKU,WAHjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAjBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzDF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAqFD;;AA1IgC;;AA6InC,MAAMY,eAAe,GAAI9B,KAAD,KAAY;EAClCwB,QAAQ,EAAExB,KAAK,CAAC+B,MAAN,CAAaC;AADW,CAAZ,CAAxB;;AAIAjC,UAAU,CAACkC,SAAX,GAAuB;EACrBd,QAAQ,EAAE3B,SAAS,CAAC0C,IAAV,CAAeC,UADJ;EAErBX,QAAQ,EAAEhC,SAAS,CAAC4C,OAAV,CAAkB5C,SAAS,CAAC6C,MAA5B,EAAoCF;AAFzB,CAAvB;AAKA,eAAexC,OAAO,CAACmC,eAAD,CAAP,CAAyB/B,UAAzB,CAAf"},"metadata":{},"sourceType":"module"}