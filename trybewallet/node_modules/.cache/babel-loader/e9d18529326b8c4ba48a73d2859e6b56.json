{"ast":null,"code":"export const USER_EMAIL = 'USER_EMAIL';\nexport const ADD_TOTALSUM = 'ADD_TOTALSUM';\nexport const ADD_ECONOMIA = 'ADD_ECONOMIA';\nexport const emailAction = email => ({\n  type: USER_EMAIL,\n  email\n});\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\nexport const request = () => ({\n  type: 'REQUEST'\n});\nexport const success = info => ({\n  type: 'SUCCESS',\n  info\n});\nexport const fail = error => ({\n  type: 'ERROR',\n  error\n});\nexport const coins = () => async dispatch => {\n  try {\n    dispatch(request());\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    delete data.USDT;\n    dispatch(success(data));\n  } catch (error) {\n    dispatch(fail(error));\n  }\n};\nexport const addTotalSum = (totalSum, coin) => ({\n  type: ADD_TOTALSUM,\n  totalSum,\n  coin\n});\nexport const getEconomia = (expenses, exchangeRates) => ({\n  type: ADD_ECONOMIA,\n  expenses,\n  exchangeRates\n});\n\nfunction requestEconomia() {\n  return {\n    type: 'REQUEST_ECONOMIA'\n  };\n}\n\nexport function fetchEconomia(expenses) {\n  return dispatch => {\n    dispatch(requestEconomia());\n    return fetch('https://economia.awesomeapi.com.br/json/all').then(response => response.json()).then(json => {\n      dispatch(getEconomia(expenses, json));\n      dispatch(addTotalSum(expenses.value, expenses.currency));\n    });\n  };\n}","map":{"version":3,"names":["USER_EMAIL","ADD_TOTALSUM","ADD_ECONOMIA","emailAction","email","type","REQUEST","SUCCESS","ERROR","request","success","info","fail","error","coins","dispatch","response","fetch","data","json","USDT","addTotalSum","totalSum","coin","getEconomia","expenses","exchangeRates","requestEconomia","fetchEconomia","then","value","currency"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const USER_EMAIL = 'USER_EMAIL';\nexport const ADD_TOTALSUM = 'ADD_TOTALSUM';\nexport const ADD_ECONOMIA = 'ADD_ECONOMIA';\n\nexport const emailAction = (email) => ({\n  type: USER_EMAIL,\n  email,\n});\n\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\n\nexport const request = () => (\n  { type: 'REQUEST' }\n);\n\nexport const success = (info) => (\n  { type: 'SUCCESS',\n    info }\n);\n\nexport const fail = (error) => (\n  { type: 'ERROR',\n    error }\n);\n\nexport const coins = () => async (dispatch) => {\n  try {\n    dispatch(request());\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    delete data.USDT;\n    dispatch(success(data));\n  } catch (error) {\n    dispatch(fail(error));\n  }\n};\n\nexport const addTotalSum = (totalSum, coin) => ({\n  type: ADD_TOTALSUM,\n  totalSum,\n  coin,\n});\n\nexport const getEconomia = (expenses, exchangeRates) => ({\n  type: ADD_ECONOMIA,\n  expenses,\n  exchangeRates,\n});\n\nfunction requestEconomia() {\n  return { type: 'REQUEST_ECONOMIA' };\n}\n\nexport function fetchEconomia(expenses) {\n  return (dispatch) => {\n    dispatch(requestEconomia());\n    return fetch('https://economia.awesomeapi.com.br/json/all')\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch(getEconomia(expenses, json));\n        dispatch(addTotalSum(expenses.value, expenses.currency));\n      });\n  };\n}\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,WAAW,GAAIC,KAAD,KAAY;EACrCC,IAAI,EAAEL,UAD+B;EAErCI;AAFqC,CAAZ,CAApB;AAKP,OAAO,MAAME,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,MAAMC,OAAO,GAAG,OACrB;EAAEJ,IAAI,EAAE;AAAR,CADqB,CAAhB;AAIP,OAAO,MAAMK,OAAO,GAAIC,IAAD,KACrB;EAAEN,IAAI,EAAE,SAAR;EACEM;AADF,CADqB,CAAhB;AAKP,OAAO,MAAMC,IAAI,GAAIC,KAAD,KAClB;EAAER,IAAI,EAAE,OAAR;EACEQ;AADF,CADkB,CAAb;AAKP,OAAO,MAAMC,KAAK,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAC7C,IAAI;IACFA,QAAQ,CAACN,OAAO,EAAR,CAAR;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACA,OAAOD,IAAI,CAACE,IAAZ;IACAL,QAAQ,CAACL,OAAO,CAACQ,IAAD,CAAR,CAAR;EACD,CAND,CAME,OAAOL,KAAP,EAAc;IACdE,QAAQ,CAACH,IAAI,CAACC,KAAD,CAAL,CAAR;EACD;AACF,CAVM;AAYP,OAAO,MAAMQ,WAAW,GAAG,CAACC,QAAD,EAAWC,IAAX,MAAqB;EAC9ClB,IAAI,EAAEJ,YADwC;EAE9CqB,QAF8C;EAG9CC;AAH8C,CAArB,CAApB;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,aAAX,MAA8B;EACvDrB,IAAI,EAAEH,YADiD;EAEvDuB,QAFuD;EAGvDC;AAHuD,CAA9B,CAApB;;AAMP,SAASC,eAAT,GAA2B;EACzB,OAAO;IAAEtB,IAAI,EAAE;EAAR,CAAP;AACD;;AAED,OAAO,SAASuB,aAAT,CAAuBH,QAAvB,EAAiC;EACtC,OAAQV,QAAD,IAAc;IACnBA,QAAQ,CAACY,eAAe,EAAhB,CAAR;IACA,OAAOV,KAAK,CAAC,6CAAD,CAAL,CACJY,IADI,CACEb,QAAD,IAAcA,QAAQ,CAACG,IAAT,EADf,EAEJU,IAFI,CAEEV,IAAD,IAAU;MACdJ,QAAQ,CAACS,WAAW,CAACC,QAAD,EAAWN,IAAX,CAAZ,CAAR;MACAJ,QAAQ,CAACM,WAAW,CAACI,QAAQ,CAACK,KAAV,EAAiBL,QAAQ,CAACM,QAA1B,CAAZ,CAAR;IACD,CALI,CAAP;EAMD,CARD;AASD"},"metadata":{},"sourceType":"module"}