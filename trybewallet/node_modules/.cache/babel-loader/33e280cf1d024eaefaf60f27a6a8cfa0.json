{"ast":null,"code":"var _jsxFileName = \"/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coins } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = async () => {\n      const {\n        dispatch\n      } = this.props;\n      const respose = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const data = await respose.json();\n      this.setState(() => ({\n        exchangeRates: data\n      }), () => {\n        const {\n          id,\n          value,\n          moeda,\n          exchangeRates,\n          description,\n          paymentMethod,\n          tag\n        } = this.state;\n        this.setState({\n          total: +value * +exchangeRates[currency].ask\n        }, () => {\n          dispatch(inputWalletForm({\n            id,\n            value,\n            moeda,\n            exchangeRates,\n            description,\n            paymentMethod,\n            tag\n          }));\n          const {\n            total\n          } = this.state;\n          console.log(typeof total);\n          dispatch(sumTotal(total));\n          this.setState({\n            id: id + 1,\n            value: '',\n            moeda: 'USD',\n            paymentMethod: 'Dinheiro',\n            tag: 'Alimentação',\n            description: '',\n            exchangeRates: {}\n          });\n        });\n      });\n    };\n\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      moeda: '',\n      paymentMethod: '',\n      tag: '',\n      exchangeRates: {},\n      total: 0\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(coins());\n  }\n\n  render() {\n    const {\n      currency\n    } = this.props;\n    const {\n      value,\n      description,\n      moeda,\n      paymentMethod,\n      tag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"valueInput\",\n        children: [\"Valor da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          \"data-testid\": \"value-input\",\n          id: \"valueInput\",\n          name: \"value\",\n          value: value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descInput\",\n        children: [\"Descri\\xE7\\xE3o da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          \"data-testid\": \"description-input\",\n          id: \"descInput\",\n          name: \"description\",\n          value: description,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: [\"Moeda\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"currency-input\",\n          value: moeda,\n          name: \"moeda\",\n          onChange: this.handleChange,\n          id: \"currency\",\n          children: currency.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: e,\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payment\",\n        children: [\"M\\xE9todo de pagamento\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"method-input\",\n          id: \"payment\",\n          name: \"payment\",\n          value: paymentMethod,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"credito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"debito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag\",\n        children: [\"Tag\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"tag-input\",\n          id: \"tag\",\n          name: \"tag\",\n          value: tag,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alimentacao\",\n            children: \"Alimenta\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lazer\",\n            children: \"Lazer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"trabalho\",\n            children: \"Trabalho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"transporte\",\n            children: \"Transporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saude\",\n            children: \"Sa\\xFAde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          text: \"Adicionar despesa\",\n          type: \"button\",\n          onClick: this.handleClick,\n          children: \"Adicionar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currency: state.wallet.currencies\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currency: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["PropTypes","React","Component","connect","coins","WalletForm","constructor","handleChange","target","name","value","setState","handleClick","dispatch","props","respose","fetch","data","json","exchangeRates","id","moeda","description","paymentMethod","tag","state","total","currency","ask","inputWalletForm","console","log","sumTotal","componentDidMount","render","map","e","mapStateToProps","wallet","currencies","propTypes","func","isRequired","arrayOf","string"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coins } from '../redux/actions';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      moeda: '',\n      paymentMethod: '',\n      tag: '',\n      exchangeRates: {},\n      total: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(coins());\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleClick = async () => {\n    const { dispatch } = this.props;\n    const respose = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await respose.json();\n    this.setState(\n      (() => ({ exchangeRates: data })),\n      () => {\n        const { id, value, moeda, exchangeRates, description, paymentMethod,\n          tag } = this.state;\n        this.setState(\n          { total: (+value) * +exchangeRates[currency].ask },\n          () => {\n            dispatch(inputWalletForm({ id,\n              value,\n              moeda,\n              exchangeRates,\n              description,\n              paymentMethod,\n              tag }));\n\n            const { total } = this.state;\n            console.log(typeof total);\n            dispatch(sumTotal(total));\n\n            this.setState({ id: id + 1,\n              value: '',\n              moeda: 'USD',\n              paymentMethod: 'Dinheiro',\n              tag: 'Alimentação',\n              description: '',\n              exchangeRates: {},\n            });\n          },\n        );\n      },\n    );\n  };\n\n  render() {\n    const { currency } = this.props;\n    const { value, description, moeda, paymentMethod, tag } = this.state;\n    return (\n      <fieldset>\n        <label\n          htmlFor=\"valueInput\"\n        >\n          Valor da despesa\n          <input\n            type=\"number\"\n            data-testid=\"value-input\"\n            id=\"valueInput\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"descInput\"\n        >\n          Descrição da despesa\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            id=\"descInput\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"currency\"\n        >\n          Moeda\n          <select\n            data-testid=\"currency-input\"\n            value={ moeda }\n            name=\"moeda\"\n            onChange={ this.handleChange }\n            id=\"currency\"\n          >\n            {currency.map((e) => <option key={ e } value={ e }>{e}</option>)}\n          </select>\n        </label>\n        <label\n          htmlFor=\"payment\"\n        >\n          Método de pagamento\n          <select\n            data-testid=\"method-input\"\n            id=\"payment\"\n            name=\"payment\"\n            value={ paymentMethod }\n            onChange={ this.handleChange }\n          >\n            <option value=\"dinheiro\">Dinheiro</option>\n            <option value=\"credito\">Cartão de crédito</option>\n            <option value=\"debito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label\n          htmlFor=\"tag\"\n        >\n          Tag\n          <select\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            name=\"tag\"\n            value={ tag }\n            onChange={ this.handleChange }\n          >\n            <option value=\"alimentacao\">Alimentação</option>\n            <option value=\"lazer\">Lazer</option>\n            <option value=\"trabalho\">Trabalho</option>\n            <option value=\"transporte\">Transporte</option>\n            <option value=\"saude\">Saúde</option>\n          </select>\n          <button\n            text=\"Adicionar despesa\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n        </label>\n      </fieldset>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currency: state.wallet.currencies,\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currency: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;EACjCI,WAAW,GAAG;IACZ;;IADY,KAmBdC,YAnBc,GAmBC,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;MAC7B,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkBF,MAAxB;MACA,KAAKG,QAAL,CAAc;QAAE,CAACF,IAAD,GAAQC;MAAV,CAAd;IACD,CAtBa;;IAAA,KAwBdE,WAxBc,GAwBA,YAAY;MACxB,MAAM;QAAEC;MAAF,IAAe,KAAKC,KAA1B;MACA,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA3B;MACA,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;MACA,KAAKP,QAAL,CACG,OAAO;QAAEQ,aAAa,EAAEF;MAAjB,CAAP,CADH,EAEE,MAAM;QACJ,MAAM;UAAEG,EAAF;UAAMV,KAAN;UAAaW,KAAb;UAAoBF,aAApB;UAAmCG,WAAnC;UAAgDC,aAAhD;UACJC;QADI,IACI,KAAKC,KADf;QAEA,KAAKd,QAAL,CACE;UAAEe,KAAK,EAAG,CAAChB,KAAF,GAAW,CAACS,aAAa,CAACQ,QAAD,CAAb,CAAwBC;QAA7C,CADF,EAEE,MAAM;UACJf,QAAQ,CAACgB,eAAe,CAAC;YAAET,EAAF;YACvBV,KADuB;YAEvBW,KAFuB;YAGvBF,aAHuB;YAIvBG,WAJuB;YAKvBC,aALuB;YAMvBC;UANuB,CAAD,CAAhB,CAAR;UAQA,MAAM;YAAEE;UAAF,IAAY,KAAKD,KAAvB;UACAK,OAAO,CAACC,GAAR,CAAY,OAAOL,KAAnB;UACAb,QAAQ,CAACmB,QAAQ,CAACN,KAAD,CAAT,CAAR;UAEA,KAAKf,QAAL,CAAc;YAAES,EAAE,EAAEA,EAAE,GAAG,CAAX;YACZV,KAAK,EAAE,EADK;YAEZW,KAAK,EAAE,KAFK;YAGZE,aAAa,EAAE,UAHH;YAIZC,GAAG,EAAE,aAJO;YAKZF,WAAW,EAAE,EALD;YAMZH,aAAa,EAAE;UANH,CAAd;QAQD,CAvBH;MAyBD,CA9BH;IAgCD,CA5Da;;IAEZ,KAAKM,KAAL,GAAa;MACXL,EAAE,EAAE,CADO;MAEXV,KAAK,EAAE,EAFI;MAGXY,WAAW,EAAE,EAHF;MAIXD,KAAK,EAAE,EAJI;MAKXE,aAAa,EAAE,EALJ;MAMXC,GAAG,EAAE,EANM;MAOXL,aAAa,EAAE,EAPJ;MAQXO,KAAK,EAAE;IARI,CAAb;EAUD;;EAEDO,iBAAiB,GAAG;IAClB,MAAM;MAAEpB;IAAF,IAAe,KAAKC,KAA1B;IACAD,QAAQ,CAACT,KAAK,EAAN,CAAR;EACD;;EA6CD8B,MAAM,GAAG;IACP,MAAM;MAAEP;IAAF,IAAe,KAAKb,KAA1B;IACA,MAAM;MAAEJ,KAAF;MAASY,WAAT;MAAsBD,KAAtB;MAA6BE,aAA7B;MAA4CC;IAA5C,IAAoD,KAAKC,KAA/D;IACA,oBACE;MAAA,wBACE;QACE,OAAO,EAAC,YADV;QAAA,4CAIE;UACE,IAAI,EAAC,QADP;UAEE,eAAY,aAFd;UAGE,EAAE,EAAC,YAHL;UAIE,IAAI,EAAC,OAJP;UAKE,KAAK,EAAGf,KALV;UAME,QAAQ,EAAG,KAAKH;QANlB;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QACE,OAAO,EAAC,WADV;QAAA,sDAIE;UACE,IAAI,EAAC,MADP;UAEE,eAAY,mBAFd;UAGE,EAAE,EAAC,WAHL;UAIE,IAAI,EAAC,aAJP;UAKE,KAAK,EAAGe,WALV;UAME,QAAQ,EAAG,KAAKf;QANlB;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF,eA2BE;QACE,OAAO,EAAC,UADV;QAAA,iCAIE;UACE,eAAY,gBADd;UAEE,KAAK,EAAGc,KAFV;UAGE,IAAI,EAAC,OAHP;UAIE,QAAQ,EAAG,KAAKd,YAJlB;UAKE,EAAE,EAAC,UALL;UAAA,UAOGoB,QAAQ,CAACQ,GAAT,CAAcC,CAAD,iBAAO;YAAkB,KAAK,EAAGA,CAA1B;YAAA,UAA+BA;UAA/B,GAAcA,CAAd;YAAA;YAAA;YAAA;UAAA,QAApB;QAPH;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BF,eAyCE;QACE,OAAO,EAAC,SADV;QAAA,kDAIE;UACE,eAAY,cADd;UAEE,EAAE,EAAC,SAFL;UAGE,IAAI,EAAC,SAHP;UAIE,KAAK,EAAGb,aAJV;UAKE,QAAQ,EAAG,KAAKhB,YALlB;UAAA,wBAOE;YAAQ,KAAK,EAAC,UAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAQ,KAAK,EAAC,SAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAQ,KAAK,EAAC,QAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzCF,eAyDE;QACE,OAAO,EAAC,KADV;QAAA,+BAIE;UACE,eAAY,WADd;UAEE,EAAE,EAAC,KAFL;UAGE,IAAI,EAAC,KAHP;UAIE,KAAK,EAAGiB,GAJV;UAKE,QAAQ,EAAG,KAAKjB,YALlB;UAAA,wBAOE;YAAQ,KAAK,EAAC,aAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAQ,KAAK,EAAC,OAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAQ,KAAK,EAAC,UAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF,eAUE;YAAQ,KAAK,EAAC,YAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVF,eAWE;YAAQ,KAAK,EAAC,OAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAXF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAiBE;UACE,IAAI,EAAC,mBADP;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAG,KAAKK,WAHjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAjBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzDF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAqFD;;AAvJgC;;AA0JnC,MAAMyB,eAAe,GAAIZ,KAAD,KAAY;EAClCE,QAAQ,EAAEF,KAAK,CAACa,MAAN,CAAaC;AADW,CAAZ,CAAxB;;AAIAlC,UAAU,CAACmC,SAAX,GAAuB;EACrB3B,QAAQ,EAAEb,SAAS,CAACyC,IAAV,CAAeC,UADJ;EAErBf,QAAQ,EAAE3B,SAAS,CAAC2C,OAAV,CAAkB3C,SAAS,CAAC4C,MAA5B,EAAoCF;AAFzB,CAAvB;AAKA,eAAevC,OAAO,CAACkC,eAAD,CAAP,CAAyBhC,UAAzB,CAAf"},"metadata":{},"sourceType":"module"}