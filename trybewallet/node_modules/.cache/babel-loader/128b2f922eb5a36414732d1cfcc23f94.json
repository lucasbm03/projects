{"ast":null,"code":"var _jsxFileName = \"/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coins, fetchexpenses } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value,\n        checked,\n        type\n      } = e.target;\n      const check = type === 'checkbox' ? checked : value;\n      this.setState({\n        [name]: check\n      });\n    };\n\n    this.handleClick = () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(fetchexpenses(this.state));\n      this.setState(prev => ({\n        id: prev.id + 1,\n        value: '',\n        description: '',\n        moeda: '',\n        paymentMethod: '',\n        tag: ''\n      }));\n    };\n\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      moeda: '',\n      paymentMethod: '',\n      tag: '',\n      exchangeRates: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(coins());\n  }\n\n  render() {\n    const {\n      currency\n    } = this.props;\n    const {\n      value,\n      description,\n      moeda,\n      paymentMethod,\n      tag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"valueInput\",\n        children: [\"Valor da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          \"data-testid\": \"value-input\",\n          id: \"valueInput\",\n          name: \"value\",\n          value: value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descInput\",\n        children: [\"Descri\\xE7\\xE3o da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          \"data-testid\": \"description-input\",\n          id: \"descInput\",\n          name: \"description\",\n          value: description,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: [\"Moeda\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"currency-input\",\n          value: moeda,\n          name: \"moeda\",\n          onChange: this.handleChange,\n          id: \"currency\",\n          children: currency.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: e,\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payment\",\n        children: [\"M\\xE9todo de pagamento\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"method-input\",\n          id: \"payment\",\n          name: \"payment\",\n          value: paymentMethod,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"credito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"debito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag\",\n        children: [\"Tag\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"tag-input\",\n          id: \"tag\",\n          name: \"tag\",\n          value: tag,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alimentacao\",\n            children: \"Alimenta\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lazer\",\n            children: \"Lazer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"trabalho\",\n            children: \"Trabalho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"transporte\",\n            children: \"Transporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saude\",\n            children: \"Sa\\xFAde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          text: \"Adicionar despesa\",\n          type: \"button\",\n          onClick: this.handleClick,\n          children: \"Adicionar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currency: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currency: PropTypes.shape({\n    map: PropTypes.func\n  }).isRequired\n};\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["PropTypes","React","Component","connect","coins","fetchexpenses","WalletForm","constructor","handleChange","e","name","value","checked","type","target","check","setState","handleClick","dispatch","props","state","prev","id","description","moeda","paymentMethod","tag","exchangeRates","componentDidMount","render","currency","map","mapStateToProps","wallet","currencies","expenses","propTypes","func","isRequired","shape"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coins, fetchexpenses } from '../redux/actions';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      moeda: '',\n      paymentMethod: '',\n      tag: '',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(coins());\n  }\n\n  handleChange = (e) => {\n    const { name, value, checked, type } = e.target;\n    const check = type === 'checkbox' ? checked : value;\n    this.setState({\n      [name]: check,\n    });\n  };\n\n  handleClick = () => {\n    const { dispatch } = this.props;\n    dispatch(fetchexpenses(this.state));\n    this.setState((prev) => ({\n      id: prev.id + 1,\n      value: '',\n      description: '',\n      moeda: '',\n      paymentMethod: '',\n      tag: '',\n    }));\n  };\n\n  render() {\n    const { currency } = this.props;\n    const { value, description, moeda, paymentMethod, tag } = this.state;\n    return (\n      <fieldset>\n        <label\n          htmlFor=\"valueInput\"\n        >\n          Valor da despesa\n          <input\n            type=\"number\"\n            data-testid=\"value-input\"\n            id=\"valueInput\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"descInput\"\n        >\n          Descrição da despesa\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            id=\"descInput\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"currency\"\n        >\n          Moeda\n          <select\n            data-testid=\"currency-input\"\n            value={ moeda }\n            name=\"moeda\"\n            onChange={ this.handleChange }\n            id=\"currency\"\n          >\n            {currency.map((e) => <option key={ e } value={ e }>{e}</option>)}\n          </select>\n        </label>\n        <label\n          htmlFor=\"payment\"\n        >\n          Método de pagamento\n          <select\n            data-testid=\"method-input\"\n            id=\"payment\"\n            name=\"payment\"\n            value={ paymentMethod }\n            onChange={ this.handleChange }\n          >\n            <option value=\"dinheiro\">Dinheiro</option>\n            <option value=\"credito\">Cartão de crédito</option>\n            <option value=\"debito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label\n          htmlFor=\"tag\"\n        >\n          Tag\n          <select\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            name=\"tag\"\n            value={ tag }\n            onChange={ this.handleChange }\n          >\n            <option value=\"alimentacao\">Alimentação</option>\n            <option value=\"lazer\">Lazer</option>\n            <option value=\"trabalho\">Trabalho</option>\n            <option value=\"transporte\">Transporte</option>\n            <option value=\"saude\">Saúde</option>\n          </select>\n          <button\n            text=\"Adicionar despesa\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n        </label>\n      </fieldset>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currency: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currency: PropTypes.shape({\n    map: PropTypes.func,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}