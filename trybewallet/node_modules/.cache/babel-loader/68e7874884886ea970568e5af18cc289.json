{"ast":null,"code":"import { ADD_CURRENCIES, FAILED_REQUEST } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CURRENCIES:\n      return { ...state,\n        currencies: action.payload\n      };\n\n    case FAILED_REQUEST:\n      return { ...state,\n        errorMessage: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["ADD_CURRENCIES","FAILED_REQUEST","INITIAL_STATE","currencies","expenses","editor","idToEdit","wallet","state","action","type","payload","errorMessage","error"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import { ADD_CURRENCIES, FAILED_REQUEST } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  case FAILED_REQUEST:\n    return {\n      ...state,\n      errorMessage: action.error,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,YAA/C;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,MAAM,EAAE,KAHY;EAIpBC,QAAQ,EAAE;AAJU,CAAtB;;AAOA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BN,aAA0B;EAAA,IAAXO,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKV,cAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELL,UAAU,EAAEM,MAAM,CAACE;MAFd,CAAP;;IAIF,KAAKV,cAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELI,YAAY,EAAEH,MAAM,CAACI;MAFhB,CAAP;;IAIF;MACE,OAAOL,KAAP;EAZF;AAcD,CAfD;;AAiBA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}