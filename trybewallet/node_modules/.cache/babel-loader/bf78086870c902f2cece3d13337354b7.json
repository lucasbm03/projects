{"ast":null,"code":"export const USER_EMAIL = 'USER_EMAIL';\nexport const ADD_COINS = 'ADD_COINS';\nexport const ADD_TOTALSUM = 'ADD_TOTALSUM';\nexport const ADD_ECONOMIA = 'ADD_ECONOMIA';\nexport const emailAction = email => ({\n  type: USER_EMAIL,\n  email\n});\nexport const addCoins = coins => ({\n  type: ADD_COINS,\n  coins\n});\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\nexport const request = () => ({\n  type: 'REQUEST'\n});\nexport const success = info => ({\n  type: 'SUCCESS',\n  info\n});\nexport const fail = error => ({\n  type: 'ERROR',\n  error\n});\nexport const addTotalSum = (totalSum, coin) => ({\n  type: ADD_TOTALSUM,\n  totalSum,\n  coin\n});\nexport const getEconomia = (expenses, exchangeRates) => ({\n  type: ADD_ECONOMIA,\n  expenses,\n  exchangeRates\n});\n\nfunction requestEconomia() {\n  return {\n    type: 'REQUEST_ECONOMIA'\n  };\n}\n\nexport function fetchEconomia(expenses) {\n  return dispatch => {\n    dispatch(requestEconomia());\n    return fetch('https://economia.awesomeapi.com.br/json/all').then(response => response.json()).then(json => {\n      dispatch(getEconomia(expenses, json));\n      dispatch(addTotalSum(expenses.value, expenses.currency));\n    });\n  };\n}","map":{"version":3,"names":["USER_EMAIL","ADD_COINS","ADD_TOTALSUM","ADD_ECONOMIA","emailAction","email","type","addCoins","coins","REQUEST","SUCCESS","ERROR","request","success","info","fail","error","addTotalSum","totalSum","coin","getEconomia","expenses","exchangeRates","requestEconomia","fetchEconomia","dispatch","fetch","then","response","json","value","currency"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const USER_EMAIL = 'USER_EMAIL';\nexport const ADD_COINS = 'ADD_COINS';\nexport const ADD_TOTALSUM = 'ADD_TOTALSUM';\nexport const ADD_ECONOMIA = 'ADD_ECONOMIA';\n\nexport const emailAction = (email) => ({\n  type: USER_EMAIL,\n  email,\n});\n\nexport const addCoins = (coins) => ({\n  type: ADD_COINS,\n  coins,\n});\n\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\n\nexport const request = () => (\n  { type: 'REQUEST' }\n);\n\nexport const success = (info) => (\n  { type: 'SUCCESS',\n    info }\n);\n\nexport const fail = (error) => (\n  { type: 'ERROR',\n    error }\n);\n\nexport const addTotalSum = (totalSum, coin) => ({\n  type: ADD_TOTALSUM,\n  totalSum,\n  coin,\n});\n\nexport const getEconomia = (expenses, exchangeRates) => ({\n  type: ADD_ECONOMIA,\n  expenses,\n  exchangeRates,\n});\n\nfunction requestEconomia() {\n  return { type: 'REQUEST_ECONOMIA' };\n}\n\nexport function fetchEconomia(expenses) {\n  return (dispatch) => {\n    dispatch(requestEconomia());\n    return fetch('https://economia.awesomeapi.com.br/json/all')\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch(getEconomia(expenses, json));\n        dispatch(addTotalSum(expenses.value, expenses.currency));\n      });\n  };\n}\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,WAAW,GAAIC,KAAD,KAAY;EACrCC,IAAI,EAAEN,UAD+B;EAErCK;AAFqC,CAAZ,CAApB;AAKP,OAAO,MAAME,QAAQ,GAAIC,KAAD,KAAY;EAClCF,IAAI,EAAEL,SAD4B;EAElCO;AAFkC,CAAZ,CAAjB;AAKP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,MAAMC,OAAO,GAAG,OACrB;EAAEN,IAAI,EAAE;AAAR,CADqB,CAAhB;AAIP,OAAO,MAAMO,OAAO,GAAIC,IAAD,KACrB;EAAER,IAAI,EAAE,SAAR;EACEQ;AADF,CADqB,CAAhB;AAKP,OAAO,MAAMC,IAAI,GAAIC,KAAD,KAClB;EAAEV,IAAI,EAAE,OAAR;EACEU;AADF,CADkB,CAAb;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,IAAX,MAAqB;EAC9Cb,IAAI,EAAEJ,YADwC;EAE9CgB,QAF8C;EAG9CC;AAH8C,CAArB,CAApB;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,aAAX,MAA8B;EACvDhB,IAAI,EAAEH,YADiD;EAEvDkB,QAFuD;EAGvDC;AAHuD,CAA9B,CAApB;;AAMP,SAASC,eAAT,GAA2B;EACzB,OAAO;IAAEjB,IAAI,EAAE;EAAR,CAAP;AACD;;AAED,OAAO,SAASkB,aAAT,CAAuBH,QAAvB,EAAiC;EACtC,OAAQI,QAAD,IAAc;IACnBA,QAAQ,CAACF,eAAe,EAAhB,CAAR;IACA,OAAOG,KAAK,CAAC,6CAAD,CAAL,CACJC,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEE,IAAD,IAAU;MACdJ,QAAQ,CAACL,WAAW,CAACC,QAAD,EAAWQ,IAAX,CAAZ,CAAR;MACAJ,QAAQ,CAACR,WAAW,CAACI,QAAQ,CAACS,KAAV,EAAiBT,QAAQ,CAACU,QAA1B,CAAZ,CAAR;IACD,CALI,CAAP;EAMD,CARD;AASD"},"metadata":{},"sourceType":"module"}