{"ast":null,"code":"import { ADD_COINS, ADD_ECONOMIA, ADD_TOTALSUM } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n  totalSum: 0\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_COINS:\n      return { ...state,\n        currencies: action.coins\n      };\n\n    case ADD_ECONOMIA:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          value: action.expenses.value,\n          description: action.expenses.description,\n          currency: action.expenses.currency,\n          method: action.expenses.method,\n          tag: action.expenses.tag,\n          exchangeRates: action.exchangeRates\n        }]\n      };\n\n    case ADD_TOTALSUM:\n      return { ...state,\n        totalSum: parseFloat((+action.totalSum * +state.expenses[state.expenses.length - 1].exchangeRates[action.coin].ask + state.totalSum).toFixed(2))\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["ADD_COINS","ADD_ECONOMIA","ADD_TOTALSUM","INITIAL_STATE","currencies","expenses","editor","idToEdit","totalSum","wallet","state","action","type","coins","id","length","value","description","currency","method","tag","exchangeRates","parseFloat","coin","ask","toFixed"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["import { ADD_COINS, ADD_ECONOMIA, ADD_TOTALSUM } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n  totalSum: 0,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_COINS:\n    return {\n      ...state,\n      currencies: action.coins,\n\n    };\n  case ADD_ECONOMIA:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses, {\n          id: state.expenses.length,\n          value: action.expenses.value,\n          description: action.expenses.description,\n          currency: action.expenses.currency,\n          method: action.expenses.method,\n          tag: action.expenses.tag,\n          exchangeRates: action.exchangeRates,\n        }],\n\n    };\n  case ADD_TOTALSUM:\n    return {\n      ...state,\n      totalSum: parseFloat(((+action.totalSum\n            * +state.expenses[state.expenses.length - 1].exchangeRates[action.coin].ask)\n           + state.totalSum).toFixed(2)),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,YAAlC,QAAsD,YAAtD;AAEA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,MAAM,EAAE,KAHY;EAIpBC,QAAQ,EAAE,CAJU;EAKpBC,QAAQ,EAAE;AALU,CAAtB;;AAQA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BP,aAA0B;EAAA,IAAXQ,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKZ,SAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELN,UAAU,EAAEO,MAAM,CAACE;MAFd,CAAP;;IAKF,KAAKZ,YAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELL,QAAQ,EAAE,CACR,GAAGK,KAAK,CAACL,QADD,EACW;UACjBS,EAAE,EAAEJ,KAAK,CAACL,QAAN,CAAeU,MADF;UAEjBC,KAAK,EAAEL,MAAM,CAACN,QAAP,CAAgBW,KAFN;UAGjBC,WAAW,EAAEN,MAAM,CAACN,QAAP,CAAgBY,WAHZ;UAIjBC,QAAQ,EAAEP,MAAM,CAACN,QAAP,CAAgBa,QAJT;UAKjBC,MAAM,EAAER,MAAM,CAACN,QAAP,CAAgBc,MALP;UAMjBC,GAAG,EAAET,MAAM,CAACN,QAAP,CAAgBe,GANJ;UAOjBC,aAAa,EAAEV,MAAM,CAACU;QAPL,CADX;MAFL,CAAP;;IAcF,KAAKnB,YAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELF,QAAQ,EAAEc,UAAU,CAAC,CAAE,CAACX,MAAM,CAACH,QAAR,GACf,CAACE,KAAK,CAACL,QAAN,CAAeK,KAAK,CAACL,QAAN,CAAeU,MAAf,GAAwB,CAAvC,EAA0CM,aAA1C,CAAwDV,MAAM,CAACY,IAA/D,EAAqEC,GADxD,GAEfd,KAAK,CAACF,QAFQ,EAEEiB,OAFF,CAEU,CAFV,CAAD;MAFf,CAAP;;IAMF;MACE,OAAOf,KAAP;EA9BF;AAgCD,CAjCD;;AAmCA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}