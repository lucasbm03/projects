{"ast":null,"code":"var _jsxFileName = \"/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrencies, getCurrencieValue } from '../tests/helpers/api';\nimport { currencieAction, expenseAction } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = async () => {\n      const {\n        expenses,\n        dispatch\n      } = this.props;\n      const currenciesValues = await getCurrencieValue();\n      this.setState({\n        exchangeRates: currenciesValues\n      }, () => {\n        dispatch(expenseAction(this.state));\n        this.setState({\n          value: '',\n          description: ''\n        });\n      });\n      this.setState({\n        id: expenses.length\n      });\n    };\n\n    this.state = {\n      id: 0,\n      value: '0',\n      description: '',\n      currency: 'USD',\n      paymentMethod: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {}\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    const currencieArr = await getCurrencies();\n    dispatch(currencieAction(currencieArr));\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      value,\n      description,\n      moeda,\n      paymentMethod,\n      tag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"valueInput\",\n        children: [\"Valor da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          \"data-testid\": \"value-input\",\n          id: \"valueInput\",\n          name: \"value\",\n          value: value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descInput\",\n        children: [\"Descri\\xE7\\xE3o da despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          \"data-testid\": \"description-input\",\n          id: \"descInput\",\n          name: \"description\",\n          value: description,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: [\"Moeda\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.handleChange,\n          \"data-testid\": \"currency-input\",\n          name: \"currency\",\n          id: \"currency\",\n          value: currency,\n          children: currencies.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: element\n          }, element, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payment\",\n        children: [\"M\\xE9todo de pagamento\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"method-input\",\n          id: \"payment\",\n          name: \"payment\",\n          value: paymentMethod,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"credito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"debito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag\",\n        children: [\"Tag\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"tag-input\",\n          id: \"tag\",\n          name: \"tag\",\n          value: tag,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alimentacao\",\n            children: \"Alimenta\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lazer\",\n            children: \"Lazer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"trabalho\",\n            children: \"Trabalho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"transporte\",\n            children: \"Transporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saude\",\n            children: \"Sa\\xFAde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleClick,\n          children: \"Adicionar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nWalletForm.propTypes = {\n  currencies: PropTypes.shape({\n    map: PropTypes.func\n  })\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["PropTypes","React","Component","connect","getCurrencies","getCurrencieValue","currencieAction","expenseAction","WalletForm","constructor","handleChange","target","name","value","setState","handleClick","expenses","dispatch","props","currenciesValues","exchangeRates","state","description","id","length","currency","paymentMethod","tag","componentDidMount","currencieArr","render","currencies","moeda","map","element","propTypes","shape","func","isRequired","mapStateToProps","wallet"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrencies, getCurrencieValue } from '../tests/helpers/api';\nimport { currencieAction, expenseAction } from '../redux/actions';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: 0,\n      value: '0',\n      description: '',\n      currency: 'USD',\n      paymentMethod: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  async componentDidMount() {\n    const { dispatch } = this.props;\n    const currencieArr = await getCurrencies();\n    dispatch(currencieAction(currencieArr));\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleClick = async () => {\n    const { expenses, dispatch } = this.props;\n    const currenciesValues = await getCurrencieValue();\n    this.setState({ exchangeRates: currenciesValues }, () => {\n      dispatch(expenseAction(this.state));\n      this.setState({ value: '', description: '' });\n    });\n    this.setState({ id: expenses.length });\n  };\n\n  render() {\n    const { currencies } = this.props;\n    const { value, description, moeda, paymentMethod, tag } = this.state;\n    return (\n      <fieldset>\n        <label\n          htmlFor=\"valueInput\"\n        >\n          Valor da despesa\n          <input\n            type=\"number\"\n            data-testid=\"value-input\"\n            id=\"valueInput\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"descInput\"\n        >\n          Descrição da despesa\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            id=\"descInput\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"currency\"\n        >\n          Moeda\n          <select\n            onChange={ this.handleChange }\n            data-testid=\"currency-input\"\n            name=\"currency\"\n            id=\"currency\"\n            value={ currency }\n          >\n            {currencies\n              .map((element) => <option key={ element }>{element}</option>)}\n          </select>\n        </label>\n        <label\n          htmlFor=\"payment\"\n        >\n          Método de pagamento\n          <select\n            data-testid=\"method-input\"\n            id=\"payment\"\n            name=\"payment\"\n            value={ paymentMethod }\n            onChange={ this.handleChange }\n          >\n            <option value=\"dinheiro\">Dinheiro</option>\n            <option value=\"credito\">Cartão de crédito</option>\n            <option value=\"debito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label\n          htmlFor=\"tag\"\n        >\n          Tag\n          <select\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            name=\"tag\"\n            value={ tag }\n            onChange={ this.handleChange }\n          >\n            <option value=\"alimentacao\">Alimentação</option>\n            <option value=\"lazer\">Lazer</option>\n            <option value=\"trabalho\">Trabalho</option>\n            <option value=\"transporte\">Transporte</option>\n            <option value=\"saude\">Saúde</option>\n          </select>\n          <button\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n        </label>\n      </fieldset>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  currencies: PropTypes.shape({\n    map: PropTypes.func,\n  }),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}