{"ast":null,"code":"const USER_EMAIL = 'USER_EMAIL';\nconst REQUEST_WALLET = 'REQUEST_WALLET';\nconst RESPONSE_WALLET_SUCCESS = 'RESPONSE_WALLET_SUCCESS';\nconst RESPONSE_WALLET_ERROR = 'RESPONSE_WALLET_ERROR';\nexport const emailAction = info => ({\n  type: USER_EMAIL,\n  payload: info\n});\nexport const requestWallet = () => ({\n  type: REQUEST_WALLET\n});\nexport const responseSuccess = coins => ({\n  type: RESPONSE_WALLET_SUCCESS,\n  payload: coins\n});\nexport const responseError = error => ({\n  type: RESPONSE_WALLET_ERROR,\n  payload: error\n});\nexport const fetchWallet = () => async dispatch => {\n  dispatch(requestWallet());\n\n  try {\n    const request = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const response = await request.json();\n    delete response.USDT;\n    dispatch(responseSuccess(response));\n  } catch (error) {\n    dispatch(responseError(error.message));\n  }\n};","map":{"version":3,"names":["USER_EMAIL","REQUEST_WALLET","RESPONSE_WALLET_SUCCESS","RESPONSE_WALLET_ERROR","emailAction","info","type","payload","requestWallet","responseSuccess","coins","responseError","error","fetchWallet","dispatch","request","fetch","response","json","USDT","message"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["const USER_EMAIL = 'USER_EMAIL';\nconst REQUEST_WALLET = 'REQUEST_WALLET';\nconst RESPONSE_WALLET_SUCCESS = 'RESPONSE_WALLET_SUCCESS';\nconst RESPONSE_WALLET_ERROR = 'RESPONSE_WALLET_ERROR';\n\nexport const emailAction = (info) => ({ type: USER_EMAIL, payload: info });\n\nexport const requestWallet = () => ({\n  type: REQUEST_WALLET,\n});\n\nexport const responseSuccess = (coins) => ({\n  type: RESPONSE_WALLET_SUCCESS,\n  payload: coins,\n});\n\nexport const responseError = (error) => ({\n  type: RESPONSE_WALLET_ERROR,\n  payload: error,\n});\n\nexport const fetchWallet = () => async (dispatch) => {\n  dispatch(requestWallet());\n\n  try {\n    const request = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const response = await request.json();\n    delete response.USDT;\n    dispatch(responseSuccess(response));\n  } catch (error) {\n    dispatch(responseError(error.message));\n  }\n};\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,YAAnB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAIC,IAAD,KAAW;EAAEC,IAAI,EAAEN,UAAR;EAAoBO,OAAO,EAAEF;AAA7B,CAAX,CAApB;AAEP,OAAO,MAAMG,aAAa,GAAG,OAAO;EAClCF,IAAI,EAAEL;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMQ,eAAe,GAAIC,KAAD,KAAY;EACzCJ,IAAI,EAAEJ,uBADmC;EAEzCK,OAAO,EAAEG;AAFgC,CAAZ,CAAxB;AAKP,OAAO,MAAMC,aAAa,GAAIC,KAAD,KAAY;EACvCN,IAAI,EAAEH,qBADiC;EAEvCI,OAAO,EAAEK;AAF8B,CAAZ,CAAtB;AAKP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACnDA,QAAQ,CAACN,aAAa,EAAd,CAAR;;EAEA,IAAI;IACF,MAAMO,OAAO,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA3B;IACA,MAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;IACA,OAAOD,QAAQ,CAACE,IAAhB;IACAL,QAAQ,CAACL,eAAe,CAACQ,QAAD,CAAhB,CAAR;EACD,CALD,CAKE,OAAOL,KAAP,EAAc;IACdE,QAAQ,CAACH,aAAa,CAACC,KAAK,CAACQ,OAAP,CAAd,CAAR;EACD;AACF,CAXM"},"metadata":{},"sourceType":"module"}