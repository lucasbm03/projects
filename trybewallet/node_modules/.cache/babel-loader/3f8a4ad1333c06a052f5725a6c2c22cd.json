{"ast":null,"code":"import currenciesAPI from '../../services/currenciesAPI';\nexport const USER_EMAIL = 'USER_EMAIL';\nexport const emailAction = receivedInfo => ({\n  type: USER_EMAIL,\n  email: receivedInfo.email\n});\nexport const VALID_CURRENCY = 'VALID_CURRENCY';\nexport const CURRENCY_ERROR = 'CURRENCY_ERROR';\nexport const CURRENCY_SUCCESS = 'CURRENCY_SUCCESS';\nexport const EDIT_EXPENSES = 'EDIT_EXPENSES';\nexport const getCurrencies = () => ({\n  type: VALID_CURRENCY\n});\nexport const currenciesError = error => ({\n  type: CURRENCY_ERROR,\n  error\n});\nexport const currenciesSuccess = payload => ({\n  type: CURRENCY_SUCCESS,\n  payload\n});\nexport const ADDING_EXPENSES = 'ADDING_EXPENSES';\nexport const addingExpenses = payload => ({\n  type: ADDING_EXPENSES,\n  payload\n});\nexport function fetchCurrenciesAPI() {\n  return async dispatch => {\n    dispatch(getCurrencies);\n\n    try {\n      const result = await currenciesAPI();\n      console.log(result);\n      dispatch(currenciesSuccess(Object.keys(result).filter(el => el !== 'USDT')));\n    } catch (error) {\n      dispatch(currenciesError(error));\n    }\n  };\n}\nexport const EditExpenses = payload => ({\n  type: EDIT_EXPENSES,\n  payload\n});\n_c = EditExpenses;\nexport function fetchExpensesAPI(gastos) {\n  return async dispatch => {\n    try {\n      const result = await currenciesAPI();\n      dispatch(addingExpenses({ ...gastos,\n        exchangeRates: result\n      }));\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditExpenses\");","map":{"version":3,"names":["currenciesAPI","USER_EMAIL","emailAction","receivedInfo","type","email","VALID_CURRENCY","CURRENCY_ERROR","CURRENCY_SUCCESS","EDIT_EXPENSES","getCurrencies","currenciesError","error","currenciesSuccess","payload","ADDING_EXPENSES","addingExpenses","fetchCurrenciesAPI","dispatch","result","console","log","Object","keys","filter","el","EditExpenses","fetchExpensesAPI","gastos","exchangeRates","Error"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import currenciesAPI from '../../services/currenciesAPI';\n\nexport const USER_EMAIL = 'USER_EMAIL';\n\nexport const emailAction = (receivedInfo) => ({\n  type: USER_EMAIL,\n  email: receivedInfo.email,\n});\n\nexport const VALID_CURRENCY = 'VALID_CURRENCY';\nexport const CURRENCY_ERROR = 'CURRENCY_ERROR';\nexport const CURRENCY_SUCCESS = 'CURRENCY_SUCCESS';\nexport const EDIT_EXPENSES = 'EDIT_EXPENSES';\n\nexport const getCurrencies = () => ({\n  type: VALID_CURRENCY,\n});\n\nexport const currenciesError = (error) => ({\n  type: CURRENCY_ERROR,\n  error,\n});\n\nexport const currenciesSuccess = (payload) => ({\n  type: CURRENCY_SUCCESS,\n  payload,\n});\n\nexport const ADDING_EXPENSES = 'ADDING_EXPENSES';\nexport const addingExpenses = (payload) => ({\n  type: ADDING_EXPENSES,\n  payload,\n});\n\nexport function fetchCurrenciesAPI() {\n  return async (dispatch) => {\n    dispatch(getCurrencies);\n    try {\n      const result = await currenciesAPI();\n      console.log(result);\n      dispatch(currenciesSuccess(Object.keys(result).filter((el) => el !== 'USDT')));\n    } catch (error) {\n      dispatch(currenciesError(error));\n    }\n  };\n}\n\nexport const EditExpenses = (payload) => ({\n  type: EDIT_EXPENSES,\n  payload,\n});\n\nexport function fetchExpensesAPI(gastos) {\n  return async (dispatch) => {\n    try {\n      const result = await currenciesAPI();\n      dispatch(addingExpenses({\n        ...gastos,\n        exchangeRates: result }));\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n}\n"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,8BAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,MAAMC,WAAW,GAAIC,YAAD,KAAmB;EAC5CC,IAAI,EAAEH,UADsC;EAE5CI,KAAK,EAAEF,YAAY,CAACE;AAFwB,CAAnB,CAApB;AAKP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,aAAa,GAAG,OAAO;EAClCN,IAAI,EAAEE;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMK,eAAe,GAAIC,KAAD,KAAY;EACzCR,IAAI,EAAEG,cADmC;EAEzCK;AAFyC,CAAZ,CAAxB;AAKP,OAAO,MAAMC,iBAAiB,GAAIC,OAAD,KAAc;EAC7CV,IAAI,EAAEI,gBADuC;EAE7CM;AAF6C,CAAd,CAA1B;AAKP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,cAAc,GAAIF,OAAD,KAAc;EAC1CV,IAAI,EAAEW,eADoC;EAE1CD;AAF0C,CAAd,CAAvB;AAKP,OAAO,SAASG,kBAAT,GAA8B;EACnC,OAAO,MAAOC,QAAP,IAAoB;IACzBA,QAAQ,CAACR,aAAD,CAAR;;IACA,IAAI;MACF,MAAMS,MAAM,GAAG,MAAMnB,aAAa,EAAlC;MACAoB,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAD,QAAQ,CAACL,iBAAiB,CAACS,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA4BC,EAAD,IAAQA,EAAE,KAAK,MAA1C,CAAD,CAAlB,CAAR;IACD,CAJD,CAIE,OAAOb,KAAP,EAAc;MACdM,QAAQ,CAACP,eAAe,CAACC,KAAD,CAAhB,CAAR;IACD;EACF,CATD;AAUD;AAED,OAAO,MAAMc,YAAY,GAAIZ,OAAD,KAAc;EACxCV,IAAI,EAAEK,aADkC;EAExCK;AAFwC,CAAd,CAArB;KAAMY,Y;AAKb,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;EACvC,OAAO,MAAOV,QAAP,IAAoB;IACzB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMnB,aAAa,EAAlC;MACAkB,QAAQ,CAACF,cAAc,CAAC,EACtB,GAAGY,MADmB;QAEtBC,aAAa,EAAEV;MAFO,CAAD,CAAf,CAAR;IAGD,CALD,CAKE,OAAOP,KAAP,EAAc;MACd,MAAM,IAAIkB,KAAJ,CAAUlB,KAAV,CAAN;IACD;EACF,CATD;AAUD"},"metadata":{},"sourceType":"module"}