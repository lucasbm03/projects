{"ast":null,"code":"export const USER_EMAIL = 'USER_EMAIL';\nexport const emailAction = receivedInfo => ({\n  type: USER_EMAIL,\n  email: receivedInfo.email\n});\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\nexport const request = () => ({\n  type: 'REQUEST'\n});\nexport const success = info => ({\n  type: 'SUCCESS',\n  info\n});\nexport const fail = error => ({\n  type: 'ERROR',\n  error\n});\nexport const addingExpenses = payload => ({\n  type: ADDING_EXPENSES,\n  payload\n});\nexport function fetchCurrenciesAPI() {\n  return async dispatch => {\n    dispatch(getCurrencies);\n\n    try {\n      const result = await currenciesAPI();\n      console.log(result);\n      dispatch(currenciesSuccess(Object.keys(result).filter(el => el !== 'USDT')));\n    } catch (error) {\n      dispatch(currenciesError(error));\n    }\n  };\n}\nexport function fetchExpensesAPI(gastos) {\n  return async dispatch => {\n    try {\n      const result = await currenciesAPI();\n      dispatch(addingExpenses({ ...gastos,\n        exchangeRates: result\n      }));\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n}","map":{"version":3,"names":["USER_EMAIL","emailAction","receivedInfo","type","email","REQUEST","SUCCESS","ERROR","request","success","info","fail","error","addingExpenses","payload","ADDING_EXPENSES","fetchCurrenciesAPI","dispatch","getCurrencies","result","currenciesAPI","console","log","currenciesSuccess","Object","keys","filter","el","currenciesError","fetchExpensesAPI","gastos","exchangeRates","Error"],"sources":["/home/Lucas/Projetos-Trybe/sd-025-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["export const USER_EMAIL = 'USER_EMAIL';\n\nexport const emailAction = (receivedInfo) => ({\n  type: USER_EMAIL,\n  email: receivedInfo.email,\n});\n\nexport const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const ERROR = 'ERROR';\n\nexport const request = () => (\n  { type: 'REQUEST' }\n);\n\nexport const success = (info) => (\n  { type: 'SUCCESS',\n    info }\n);\n\nexport const fail = (error) => (\n  { type: 'ERROR',\n    error }\n);\n\nexport const addingExpenses = (payload) => ({\n  type: ADDING_EXPENSES,\n  payload,\n});\n\nexport function fetchCurrenciesAPI() {\n  return async (dispatch) => {\n    dispatch(getCurrencies);\n    try {\n      const result = await currenciesAPI();\n      console.log(result);\n      dispatch(currenciesSuccess(Object.keys(result).filter((el) => el !== 'USDT')));\n    } catch (error) {\n      dispatch(currenciesError(error));\n    }\n  };\n}\n\nexport function fetchExpensesAPI(gastos) {\n  return async (dispatch) => {\n    try {\n      const result = await currenciesAPI();\n      dispatch(addingExpenses({\n        ...gastos,\n        exchangeRates: result }));\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n}\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AAEP,OAAO,MAAMC,WAAW,GAAIC,YAAD,KAAmB;EAC5CC,IAAI,EAAEH,UADsC;EAE5CI,KAAK,EAAEF,YAAY,CAACE;AAFwB,CAAnB,CAApB;AAKP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,MAAMC,OAAO,GAAG,OACrB;EAAEL,IAAI,EAAE;AAAR,CADqB,CAAhB;AAIP,OAAO,MAAMM,OAAO,GAAIC,IAAD,KACrB;EAAEP,IAAI,EAAE,SAAR;EACEO;AADF,CADqB,CAAhB;AAKP,OAAO,MAAMC,IAAI,GAAIC,KAAD,KAClB;EAAET,IAAI,EAAE,OAAR;EACES;AADF,CADkB,CAAb;AAKP,OAAO,MAAMC,cAAc,GAAIC,OAAD,KAAc;EAC1CX,IAAI,EAAEY,eADoC;EAE1CD;AAF0C,CAAd,CAAvB;AAKP,OAAO,SAASE,kBAAT,GAA8B;EACnC,OAAO,MAAOC,QAAP,IAAoB;IACzBA,QAAQ,CAACC,aAAD,CAAR;;IACA,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,aAAa,EAAlC;MACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACAF,QAAQ,CAACM,iBAAiB,CAACC,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,MAApB,CAA4BC,EAAD,IAAQA,EAAE,KAAK,MAA1C,CAAD,CAAlB,CAAR;IACD,CAJD,CAIE,OAAOf,KAAP,EAAc;MACdK,QAAQ,CAACW,eAAe,CAAChB,KAAD,CAAhB,CAAR;IACD;EACF,CATD;AAUD;AAED,OAAO,SAASiB,gBAAT,CAA0BC,MAA1B,EAAkC;EACvC,OAAO,MAAOb,QAAP,IAAoB;IACzB,IAAI;MACF,MAAME,MAAM,GAAG,MAAMC,aAAa,EAAlC;MACAH,QAAQ,CAACJ,cAAc,CAAC,EACtB,GAAGiB,MADmB;QAEtBC,aAAa,EAAEZ;MAFO,CAAD,CAAf,CAAR;IAGD,CALD,CAKE,OAAOP,KAAP,EAAc;MACd,MAAM,IAAIoB,KAAJ,CAAUpB,KAAV,CAAN;IACD;EACF,CATD;AAUD"},"metadata":{},"sourceType":"module"}